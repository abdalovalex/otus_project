{{- $fullname := include "user-service.fullname" . -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "user-service.fullname" . }}-app
  namespace: {{ .Release.Namespace | quote }}
  labels:
    {{- include "user-service.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  minReadySeconds: {{ .Values.minReadySeconds }}
  selector:
    matchLabels:
      {{- include "user-service.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "user-service.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ include "user-service.serviceAccountName" . }}
      initContainers:
        - name: wait-for-db
          image: postgres:14.2-alpine
          command: [ "/bin/sh", "-c", "until pg_isready -h {{ include "postgresql.v1.primary.fullname" .Subcharts.postgresql }}; do echo waiting for database; sleep 2; done;" ]
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.containerPort }}
              protocol: TCP
          env:
          {{- range .Values.secrets }}
            - name: {{ .name }}
              valueFrom:
                secretKeyRef:
                  name: {{ $fullname }}
                  key: {{ .key }}
          {{- end}}
          resources:
            limits:
              cpu: {{ .Values.resources.limits.cpu }}
              memory: {{ .Values.resources.limits.memory }}
{{/*          livenessProbe:*/}}
{{/*            {{- toYaml .Values.livenessProbe | nindent 12 }}*/}}
{{/*          readinessProbe:*/}}
{{/*            {{- toYaml .Values.readinessProbe | nindent 12 }}*/}}
