apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "trade-service.fullname" . }}-migration-job
  namespace: {{ .Release.Namespace | quote }}
  labels:
      {{- include "trade-service.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": pre-install, pre-upgrade
    "helm.sh/hook-weight": "-1"
    "helm.sh/hook-delete-policy": hook-succeeded
spec:
  template:
    spec:
      initContainers:
        - name: wait-for-db
          image: postgres:14.2-alpine
          command: [ "/bin/sh", "-c", "until pg_isready -h {{ include "postgresql.v1.primary.fullname" .Subcharts.postgresql }} -U postgres; do echo waiting for database; sleep 2; done;" ]
      containers:
        - name: {{ .Chart.Name }}-migration
          image: "{{ .Values.migrationImage.repository }}:{{ .Values.migrationImage.tag }}"
          imagePullPolicy: {{ .Values.migrationImage.pullPolicy }}
          args:
            - info
            - baseline
            - migrate
            - info
          env:
            - name: FLYWAY_URL
              value: jdbc:postgresql://{{ include "postgresql.v1.primary.fullname" .Subcharts.postgresql }}:{{ .Values.postgresql.global.postgresql.service.ports.postgresql }}/{{ .Values.postgresql.global.postgresql.auth.database }}
            - name: FLYWAY_USER
              valueFrom:
                secretKeyRef:
                  name: {{ include "trade-service.fullname" . }}
                  key: username
            - name: FLYWAY_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "trade-service.fullname" . }}
                  key: password
      restartPolicy: Never